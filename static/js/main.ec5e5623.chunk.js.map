{"version":3,"sources":["components/Section/Section.module.css","components/ContactForm/ContactForm.module.css","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactElement/ContactElement.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactElement/ContactListItem.module.css"],"names":["module","exports","Section","title","children","className","styles","section","ContactForm","state","name","number","changeHandler","e","target","value","setState","submitHandler","preventDefault","contact","id","uuid","props","addContact","reset","this","onSubmit","contactForm","htmlFor","type","placeholder","onChange","disabled","length","Component","ContactListItem","onDelete","contactLi","contactLiP","onClick","contactLiBtn","ContactList","contacts","map","Filter","App","filter","deleteContactbyId","updatedContacts","newName","toLowerCase","includes","trim","toast","configure","error","position","POSITION","TOP_CENTER","autoClose","delay","transition","Zoom","filterContactsByName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec5e5623.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1pt9i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__2Z7Lx\"};","import PropTypes from \"prop-types\";\r\nimport styles from \"./Section.module.css\";\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nimport uuid from \"react-uuid\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const contact = {\r\n      id: uuid(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    this.props.addContact(contact);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.submitHandler} className={styles.contactForm}>\r\n        <label htmlFor=\"nameInput\">\r\n          Name:\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"enter name...\"\r\n            onChange={this.changeHandler}\r\n            id=\"nameInput\"\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor=\"numberInput\">\r\n          Number:\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            placeholder=\"enter number...\"\r\n            onChange={this.changeHandler}\r\n            id=\"numberInput\"\r\n          />\r\n        </label>\r\n        <button type=\"submit\" disabled={!name.length || !number.length}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nfunction ContactListItem({ name, number, onDelete }) {\r\n  return (\r\n    <li className={styles.contactLi}>\r\n      <p className={styles.contactLiP}>\r\n        {name}: {number}\r\n      </p>\r\n      <button type=\"button\" onClick={onDelete} className={styles.contactLiBtn}>\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import PropTypes from \"prop-types\";\r\nimport ContactListItem from \"../ContactElement/ContactElement\";\r\n\r\nfunction ContactList({ contacts, onDelete }) {\r\n  return (\r\n    <ul>\r\n      {contacts ? (\r\n        contacts.map(({ id, name, number }) => (\r\n          <ContactListItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            onDelete={() => onDelete(id)}\r\n          />\r\n        ))\r\n      ) : (\r\n        <p>no contact with such name in your phone </p>\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    PropTypes.array,\r\n  ]),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\n\r\nexport default function Filter({ onChange }) {\r\n  return (\r\n    <label>\r\n      Filter:\r\n      <input type=\"text\" name=\"filter\" onChange={onChange}></input>\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport Section from \"./components/Section/Section.js\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter.js\";\n\nimport { toast, Zoom } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  changeHandler = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  deleteContactbyId = (id) => {\n    const { contacts } = this.state;\n    const updatedContacts = contacts.filter((contact) => contact.id !== id);\n    this.setState({\n      contacts: [...updatedContacts],\n    });\n  };\n\n  addContact = (contact) => {\n    const newName = contact.name;\n    const names = this.state.contacts.map((contact) =>\n      contact.name.toLowerCase()\n    );\n    if (names.includes(newName.toLowerCase().trim())) {\n      toast.configure();\n      toast.error(`${newName} is already in contact list`, {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 4000,\n        delay: 200,\n        transition: Zoom,\n      });\n    } else {\n      this.setState((state) => ({\n        contacts: [...state.contacts, contact],\n      }));\n    }\n  };\n\n  filterContactsByName = () => {\n    const { contacts, filter } = this.state;\n    if (contacts.length) {\n      return contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n  };\n\n  render() {\n    const { contacts } = this.state;\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <ContactForm addContact={this.addContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          {contacts.length > 1 && <Filter onChange={this.changeHandler} />}\n          <ContactList\n            contacts={this.filterContactsByName()}\n            onDelete={this.deleteContactbyId}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactLi\":\"ContactListItem_contactLi__37ebK\",\"contactLiP\":\"ContactListItem_contactLiP__2dzWt\",\"contactLiBtn\":\"ContactListItem_contactLiBtn__2CFBB\"};"],"sourceRoot":""}